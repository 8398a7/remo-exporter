// Code generated by MockGen. DO NOT EDIT.
// Source: authhttp.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockAuthHttpDoer is a mock of AuthHttpDoer interface
type MockAuthHttpDoer struct {
	ctrl     *gomock.Controller
	recorder *MockAuthHttpDoerMockRecorder
}

// MockAuthHttpDoerMockRecorder is the mock recorder for MockAuthHttpDoer
type MockAuthHttpDoerMockRecorder struct {
	mock *MockAuthHttpDoer
}

// NewMockAuthHttpDoer creates a new mock instance
func NewMockAuthHttpDoer(ctrl *gomock.Controller) *MockAuthHttpDoer {
	mock := &MockAuthHttpDoer{ctrl: ctrl}
	mock.recorder = &MockAuthHttpDoerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAuthHttpDoer) EXPECT() *MockAuthHttpDoerMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockAuthHttpDoer) Get(url string) (*http.Response, error) {
	ret := m.ctrl.Call(m, "Get", url)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockAuthHttpDoerMockRecorder) Get(url interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAuthHttpDoer)(nil).Get), url)
}
